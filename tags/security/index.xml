<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Robhar</title>
    <link>rauwekost.github.io/tags/security/</link>
    <description>Recent content in Security on Robhar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Robert den Harink — © 2017</copyright>
    <lastBuildDate>Wed, 20 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="rauwekost.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx client certificates</title>
      <link>rauwekost.github.io/blog/nginx-client-certificates/</link>
      <pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>rauwekost.github.io/blog/nginx-client-certificates/</guid>
      <description>At work, we needed a way to verify client machines that were trying to reach our API&amp;rsquo;s.
All the services are running behind a Nginx proxy that terminates SSL. This way we have one point of entry and one place to renew certification. So the most logical place to check for client certificates is Nginx.
The creation and management of client certificates can be quite the hassle so I wrote a makefile and some shell scripts to automate this process.</description>
    </item>
    
    <item>
      <title>Self signed certificates</title>
      <link>rauwekost.github.io/blog/self-signed-certificates/</link>
      <pubDate>Mon, 23 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>rauwekost.github.io/blog/self-signed-certificates/</guid>
      <description> A quick reminder on how to create self-signed certificates for testing purposes.
Generate a private key. openssl genrsa -des3 -out server.key 1024  Create CSR (Certificate Signing Request). openssl req -new -sha256 -key server.key -out server.csr  Remove the passphrase (optional). cp server.key server.key.org openssl rsa -in server.key.org -out server.key  Generate self-signed certificate openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt  </description>
    </item>
    
  </channel>
</rss>